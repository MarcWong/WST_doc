<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"><head><title>y2015g49_hw1</title><meta http-equiv="Content-type" content="text/html;" charset="UTF-8" /><link rel="stylesheet" type="text/css" href="../css/mycss.css" /></head><body background = "../img/bg.jpg"><ul class = "nav_ui"><li class = "nav_li"><a href="../index.html">Homepage</a></li><li class = "nav_li"><a href="../week1/hw1.html">Hw1</a></li><li class = "nav_li"><a href="../week2/hw2.html">Hw2</a></li><li class = "nav_li"><a href="../week3/hw3.html">Hw3</a></li><li class = "nav_li"><a href="../week4/hw4.html">Hw4</a></li><li class = "nav_li"><a href="../week5/hw5.html">Hw5</a></li><li class = "nav_li"><a href="../week7/hw7.html">Hw7</a></li></ul><table width="766" border="10" bgcolor="#bebebe" align: "center"><tr align="center"><span class = "pp2">Homework1</span></tr><tr align="center"><td> <h3>Question1</h3></td></tr><tr align="left"> <td>From my perspective, the Netscape plug-in belongs to Distributed Object Technology. The Distributed Object Technology is essentially required for the setup of a robust and extendible interplay between web server and web client. It makes an interplay between 2 objects that are remotely distributed possible, regardless of time, space, platform and awareness, etc.The Netscape plug-in was originally developed for Netscape web browser. When one object sends a message to another object in a remote machine or process to perform some task, the results are sent back to the calling object through the Netscape plug-in.So, we could know that the Netscape plug-in operates between clients and servers. It makes the interaction between modules on different computers possible.</td></tr><tr align="center"> <td><h3>Question2</h3></td></tr><tr align="left"> <td>Compared to stateful services, stateless services are completed and robust. Stateless requests sent by clients contain all information that is needed to handle this request. So the competence for stateless services to handle a single request is powerful. What’s more, the extendable ability for stateless services are strong. On contrary, stateful services are extensively rely on the context(上下文). Stateful requests is a session of events, and a single request without a context may be meaningless. For disadvantages, stateless services are hard to accomplish complicated missions. When a complicated affair is required to be done, some extra actions are needed.	A stateless web server can’t know exactly how many browsers are reading its document, while a stateful web server can.</td></tr><tr align="center"> <td><h3>Question3</h3></td></tr><tr align="left"><td>Engine: google     Keywords: “王尧 北京大学“     Result: page2, no. 3</td></tr><tr align="center"> <td><a href="http://www.facebook.com/marcSwong">王尧的个人主页</a></td></tr><tr align="left"><td>Engine: baidu      Keywords: “王尧 北京大学“     Result: page1, no. 9</td></tr><tr align="center"> <td><a href="http://eecs.pku.edu.cn/index.aspx?menuid=4&type=articleinfo&lanmuid=63&infoid=3616&language=cn">喜报：信息科学技术学院学生代表队获得校运动会乙组第一名！</a></td></tr><tr align="center"> <td>Powered by <img src="http://img.baidu.com/img/logo-80px.gif" alt="Baidu" align="bottom" border="0"></td></tr><tr align="center"> <td><form action="http://www.baidu.com/baidu" target="_blank"><table><tr><td><input name=tn type=hidden value=baidu><input type=text name=word size=30><input type="submit" value="search"></td></tr></table></form></td></tr><tr align="right"> <td><div><a id="return" href="../index.html" ><img src="../img/logo0.png" /></a></div></td></tr></table></body>